image: docker:28.1.1
services:
  - name: docker:28.1.1-dind
    alias: docker

variables:
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_REPO: netprism
  CI_REGISTRY_USER: $DOCKER_USER
  CI_REGISTRY_IMAGE: $CI_REGISTRY_USER/$CI_REGISTRY_REPO
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  POETRY_VERSION: 2.1.2

before_script:
  - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin #$DOCKER_REGISTRY

stages:
- test
- build
- deploy

Test:
  stage: test
  image: samuelbarata/infinity-gauntlet:latest
  before_script:
    - pip install "poetry==$POETRY_VERSION" --break-system-packages
  script:
    - poetry install --with dev
    - poetry run pytest
  allow_failure: true

Build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

Deploy:
  stage: deploy
  when: manual
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

Deploy Tag:
  stage: deploy
  when: manual
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

Push to Github:
  stage: deploy
  when: manual
  variables:
    SSH_KEY: /root/.ssh/id_rsa
  before_script:
    - mkdir -p ~/.ssh
    - echo ${SSH_PRIVATE_KEY_b64} | base64 -d > $SSH_KEY
    - chmod 400 $SSH_KEY
    - ssh-agent bash -c "ssh-add $SSH_KEY"
    - ssh-keyscan -H github.com >> /root/.ssh/known_hosts
  script:
    - git remote add github git@github.com:samuelbarata/NetPrism.git
    - git push github
